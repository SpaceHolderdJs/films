{"version":3,"sources":["Components/Film.js","Components/Films.js","Components/FilmInfo.js","Components/WatchList.js","App.js","reportWebVitals.js","index.js"],"names":["Film","film","addToWatchList","removeFromWatchList","clearList","l","q","i","s","y","rank","id","useState","more","setMore","localStorage","getItem","JSON","parse","find","e","added","setAdded","className","style","background","imageUrl","justifyContent","onClick","width","Math","trunc","to","Films","searchVal","setSearchVal","films","setFilms","loading","setLoading","type","onChange","target","value","req","fetch","method","headers","then","response","json","data","console","log","d","map","FilmInfo","token","useParams","setData","useEffect","src","image","url","alt","title","titleType","runningTimeInMinutes","numberOfEpisodes","seriesStartYear","seriesEndYear","nextEpisode","split","WatchList","list","setList","randomFilm","setRandomFilm","f","filter","length","floor","random","App","watchList","setWatchList","setItem","stringify","obj","filtered","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.87478118.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport RemoveIcon from \"@material-ui/icons/RemoveRedEye\";\r\n\r\nconst Film = ({ film, addToWatchList, removeFromWatchList, clearList }) => {\r\n  const { l, q, i, s, y, rank, id } = film;\r\n\r\n  const [more, setMore] = useState(false);\r\n\r\n  const [added, setAdded] = useState(\r\n    localStorage.getItem(\"watchList\")\r\n      ? JSON.parse(localStorage.getItem(\"watchList\")).find((e) => e.id === id)\r\n      : false\r\n  );\r\n\r\n  return (\r\n    <div className=\"film column\" style={{ background: `url(${i.imageUrl})` }}>\r\n      <div className=\"line column\">\r\n        <div className=\"row\" style={{ justifyContent: \"space-between\" }}>\r\n          <h4>{l}</h4>\r\n          <div className=\"row centered\">\r\n            {!added ? (\r\n              <span\r\n                className=\"icon\"\r\n                onClick={() => {\r\n                  addToWatchList(film);\r\n                  setAdded(true);\r\n                }}>\r\n                <AddIcon />\r\n              </span>\r\n            ) : (\r\n              <span\r\n                className=\"icon\"\r\n                onClick={() => {\r\n                  removeFromWatchList(film);\r\n                  !clearList && setAdded(false);\r\n                  clearList && clearList(film);\r\n                }}>\r\n                <RemoveIcon />\r\n              </span>\r\n            )}\r\n            <span className=\"icon\" onClick={() => setMore(!more)}>\r\n              {more ? <CloseIcon /> : <InfoIcon />}\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <span>Genre: {q}</span>\r\n        {more && (\r\n          <>\r\n            <span>Actors: {s}</span>\r\n            <div className=\"row raiting-wrapper\">\r\n              <span>Rank</span>\r\n              <div\r\n                className=\"rank row centered\"\r\n                style={{\r\n                  width: `${Math.trunc(+rank) / 80}px`,\r\n                  background: `rgb(${Math.trunc(+rank / 10)},${Math.trunc(\r\n                    +rank / 100\r\n                  )},${70})`,\r\n                }}>\r\n                {rank}\r\n              </div>\r\n            </div>\r\n            <span>Year: {y}</span>\r\n            <Link to={`/filmInfo/${id}`}>\r\n              <span className=\"link\">More</span>\r\n            </Link>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Film;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport Film from \"./Film\";\r\n\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\n\r\nconst Films = ({ addToWatchList, removeFromWatchList }) => {\r\n  const [searchVal, setSearchVal] = useState(\"\");\r\n  const [films, setFilms] = useState([]);\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const getFilmsByRequest = (req) => {\r\n    setLoading(true);\r\n    fetch(`https://imdb8.p.rapidapi.com/auto-complete?q=${req}`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"x-rapidapi-key\": \"2ecc6a18f1msh149a8c93469a116p1ff3e3jsn92ea038f0326\",\r\n        \"x-rapidapi-host\": \"imdb8.p.rapidapi.com\",\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log(data);\r\n        setFilms(data.d);\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"films column centered\">\r\n      <h3>Films</h3>\r\n      <div className=\"row centered\">\r\n        <input type=\"text\" onChange={(e) => setSearchVal(e.target.value)} />\r\n        <span className=\"icon\" onClick={() => getFilmsByRequest(searchVal)}>\r\n          Search\r\n          <SearchIcon />\r\n        </span>\r\n      </div>\r\n      <div className=\"films-wrapper row centered\">\r\n        {loading && <h1>Loading...</h1>}\r\n        {films.map((film, i) => (\r\n          <Film\r\n            key={i}\r\n            film={film}\r\n            addToWatchList={addToWatchList}\r\n            removeFromWatchList={removeFromWatchList}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Films;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\n\r\nconst FilmInfo = () => {\r\n  const { token } = useParams();\r\n\r\n  const [data, setData] = useState();\r\n\r\n  useEffect(() => {\r\n    fetch(`https://imdb8.p.rapidapi.com/title/get-details?tconst=${token}`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"x-rapidapi-key\": \"2ecc6a18f1msh149a8c93469a116p1ff3e3jsn92ea038f0326\",\r\n        \"x-rapidapi-host\": \"imdb8.p.rapidapi.com\",\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setData(data);\r\n        console.log(data);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"film-info column centered\">\r\n      <div className=\"decor\"></div>\r\n      {data ? (\r\n        <div className=\"row\">\r\n          <img src={data.image.url} alt={data.title} />\r\n          <div className=\"column\">\r\n            <h1>{data.title}</h1>\r\n            <h3>Genre: {data.titleType}</h3>\r\n            <span>Duration : {data.runningTimeInMinutes} mins</span>\r\n            <span>Episodes : {data.numberOfEpisodes}</span>\r\n            <span>\r\n              Years: {data.seriesStartYear} - {data.seriesEndYear}\r\n            </span>\r\n            {data.nextEpisode && (\r\n              <Link to={`/filmInfo/:${data.nextEpisode.split(\"/\")[2]}`}>\r\n                <span className=\"link\">Next episode</span>\r\n              </Link>\r\n            )}\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <h1>Loading...</h1>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FilmInfo;\r\n","import React, { useState } from \"react\";\r\nimport Film from \"./Film\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst WatchList = ({ addToWatchList, removeFromWatchList }) => {\r\n  const [list, setList] = useState(\r\n    localStorage.getItem(\"watchList\")\r\n      ? JSON.parse(localStorage.getItem(\"watchList\"))\r\n      : []\r\n  );\r\n\r\n  const [randomFilm, setRandomFilm] = useState();\r\n\r\n  const clearList = (f) => {\r\n    setList(list.filter((film) => film.id !== f.id));\r\n  };\r\n\r\n  return (\r\n    <div className=\"watchList column centered\">\r\n      <h1>Watch List</h1>\r\n      <div className=\"row films-wrapper\">\r\n        {list.length < 1 ? (\r\n          <h1>Nothing is here yet</h1>\r\n        ) : (\r\n          list.map((film, i) => (\r\n            <Film\r\n              key={i}\r\n              film={film}\r\n              addToWatchList={addToWatchList}\r\n              removeFromWatchList={removeFromWatchList}\r\n              clearList={clearList}\r\n            />\r\n          ))\r\n        )}\r\n      </div>\r\n      {list.length > 1 && (\r\n        <div className=\"column centered rand-film-wrapper\">\r\n          <h4>Random film to watch</h4>\r\n          <button\r\n            onClick={() =>\r\n              setRandomFilm(list[Math.floor(Math.random() * (list.length - 1))])\r\n            }>\r\n            Select\r\n          </button>\r\n          {randomFilm && (\r\n            <div className=\"row\">\r\n              <img src={randomFilm.i.imageUrl} alt={randomFilm.title} />\r\n              <div className=\"column\">\r\n                <h3>{randomFilm.l}</h3>\r\n                <span>Acrors: {randomFilm.s}</span>\r\n                <span>Year: {randomFilm.y}</span>\r\n                <span>Raiting: {randomFilm.rank}</span>\r\n                <Link to={`/filmInfo/${randomFilm.id}`}>\r\n                  <span className=\"link\">More</span>\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WatchList;\r\n","import { useEffect, useState } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\n\r\nimport Films from \"./Components/Films\";\r\nimport FilmInfo from \"./Components/FilmInfo\";\r\nimport WatchList from \"./Components/WatchList\";\r\n\r\nimport \"./App.css\";\r\n\r\nconst App = () => {\r\n  const [watchList, setWatchList] = useState(\r\n    localStorage.getItem(\"watchList\")\r\n      ? JSON.parse(localStorage.getItem(\"watchList\"))\r\n      : []\r\n  );\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"watchList\", JSON.stringify(watchList));\r\n  }, [watchList]);\r\n\r\n  const addToWatchList = (obj) => {\r\n    setWatchList([...watchList, obj]);\r\n  };\r\n\r\n  const removeFromWatchList = (film) => {\r\n    const filtered = watchList.filter((f) => f.id !== film.id);\r\n    setWatchList(filtered);\r\n  };\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"app \">\r\n        <header className=\"row centered\">\r\n          <Link to=\"/\">\r\n            <span className=\"link\">Main</span>\r\n          </Link>\r\n          <Link to=\"/films\">\r\n            <span className=\"link\">Films</span>\r\n          </Link>\r\n          <Link to=\"/watchList\">\r\n            <span className=\"link\">Watch List</span>\r\n          </Link>\r\n        </header>\r\n        <div className=\"decor\"></div>\r\n\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <div className=\"column centered text-wrapper\">\r\n              <h1>Imdb API</h1>\r\n              <img\r\n                src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/6/69/IMDB_Logo_2016.svg/238px-IMDB_Logo_2016.svg.png\"\r\n                alt=\"\"\r\n              />\r\n              <p>\r\n                IMDb is the world's most popular and authoritative source for\r\n                movie, TV and celebrity content. Find ratings and reviews for\r\n                the newest movie and TV shows.\r\n              </p>\r\n              <p>\r\n                The movie and talent pages of IMDb are accessible to all\r\n                internet users, but a registration process is necessary to\r\n                contribute information to the site. Most data in the database is\r\n                provided by volunteer contributors. The site enables registered\r\n                users to submit new material and edits to existing entries.\r\n                Users with a proven track record of submitting data are given\r\n                instant approval for additions or corrections to cast, credits,\r\n                and other demographics of media product and personalities.\r\n                However, image, name, character name, plot summaries, and title\r\n                changes are supposedly screened before publication, and usually\r\n                take between 24 and 72 hours to appear. All registered users can\r\n                choose their own site name, and most operate anonymously. They\r\n                have a profile page which shows how long a registered user has\r\n                been a member, as well as personal movie ratings (should the\r\n                user decide to display them) and, since 2015, \"badges\" are added\r\n                representing how many contributions a particular registered user\r\n                has submitted. These badges range from total contributions made\r\n                to independent categories such as photos, trivia, bios, etc. If\r\n                a registered user or visitor is in the entertainment industry\r\n                and has an IMDb page, then that user/visitor can add photos to\r\n                that page by enrolling in IMDbPRO. There is no single index of\r\n                contributors, no index on each profile page of the items\r\n                contributed, and (except for plot synopses and biographies) no\r\n                identification of contributors to each product's or person's\r\n                data pages. Users are also invited to rate any film or TV series\r\n                on a scale of 1 to 10, and the totals are converted into a\r\n                weighted mean-rating that is displayed beside each title, with\r\n                online filters employed to deter ballot-stuffing. In January\r\n                2019, IMDb launched a free movie streaming platform called\r\n                Freedive, an ad-supported service offering Hollywood movie\r\n                titles and TV shows. Many Freedive titles are licensed from Sony\r\n                Pictures. Subsequently, in June 2019, Freedive was rebranded as\r\n                IMDbTV, during the launch of which, the amount of content\r\n                contained on the platform was tripled.\r\n              </p>\r\n            </div>\r\n          </Route>\r\n          <Route path=\"/films\">\r\n            <Films\r\n              addToWatchList={addToWatchList}\r\n              removeFromWatchList={removeFromWatchList}\r\n            />\r\n          </Route>\r\n          <Route path=\"/filmInfo/:token\">\r\n            <FilmInfo />\r\n          </Route>\r\n          <Route path=\"/watchList\">\r\n            <WatchList\r\n              addToWatchList={addToWatchList}\r\n              removeFromWatchList={removeFromWatchList}\r\n            />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}