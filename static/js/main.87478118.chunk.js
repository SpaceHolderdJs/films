(this.webpackJsonpfilms=this.webpackJsonpfilms||[]).push([[0],{34:function(e,t,s){},45:function(e,t,s){},47:function(e,t,s){"use strict";s.r(t);var n=s(0),a=s.n(n),c=s(18),i=s.n(c),r=(s(34),s(13)),o=s(4),l=s(10),d=s(3),h=s(27),j=s.n(h),b=s(26),m=s.n(b),u=s(24),p=s.n(u),O=s(25),f=s.n(O),x=s(1),g=function(e){var t=e.film,s=e.addToWatchList,a=e.removeFromWatchList,c=e.clearList,i=t.l,r=t.q,d=t.i,h=t.s,b=t.y,u=t.rank,O=t.id,g=Object(n.useState)(!1),v=Object(o.a)(g,2),w=v[0],N=v[1],y=Object(n.useState)(!!localStorage.getItem("watchList")&&JSON.parse(localStorage.getItem("watchList")).find((function(e){return e.id===O}))),L=Object(o.a)(y,2),k=L[0],S=L[1];return Object(x.jsx)("div",{className:"film column",style:{background:"url(".concat(d.imageUrl,")")},children:Object(x.jsxs)("div",{className:"line column",children:[Object(x.jsxs)("div",{className:"row",style:{justifyContent:"space-between"},children:[Object(x.jsx)("h4",{children:i}),Object(x.jsxs)("div",{className:"row centered",children:[k?Object(x.jsx)("span",{className:"icon",onClick:function(){a(t),!c&&S(!1),c&&c(t)},children:Object(x.jsx)(f.a,{})}):Object(x.jsx)("span",{className:"icon",onClick:function(){s(t),S(!0)},children:Object(x.jsx)(p.a,{})}),Object(x.jsx)("span",{className:"icon",onClick:function(){return N(!w)},children:w?Object(x.jsx)(m.a,{}):Object(x.jsx)(j.a,{})})]})]}),Object(x.jsxs)("span",{children:["Genre: ",r]}),w&&Object(x.jsxs)(x.Fragment,{children:[Object(x.jsxs)("span",{children:["Actors: ",h]}),Object(x.jsxs)("div",{className:"row raiting-wrapper",children:[Object(x.jsx)("span",{children:"Rank"}),Object(x.jsx)("div",{className:"rank row centered",style:{width:"".concat(Math.trunc(+u)/80,"px"),background:"rgb(".concat(Math.trunc(+u/10),",").concat(Math.trunc(+u/100),",",70,")")},children:u})]}),Object(x.jsxs)("span",{children:["Year: ",b]}),Object(x.jsx)(l.b,{to:"/filmInfo/".concat(O),children:Object(x.jsx)("span",{className:"link",children:"More"})})]})]})})},v=s(28),w=s.n(v),N=function(e){var t=e.addToWatchList,s=e.removeFromWatchList,a=Object(n.useState)(""),c=Object(o.a)(a,2),i=c[0],r=c[1],l=Object(n.useState)([]),d=Object(o.a)(l,2),h=d[0],j=d[1],b=Object(n.useState)(!1),m=Object(o.a)(b,2),u=m[0],p=m[1];return Object(x.jsxs)("div",{className:"films column centered",children:[Object(x.jsx)("h3",{children:"Films"}),Object(x.jsxs)("div",{className:"row centered",children:[Object(x.jsx)("input",{type:"text",onChange:function(e){return r(e.target.value)}}),Object(x.jsxs)("span",{className:"icon",onClick:function(){return e=i,p(!0),void fetch("https://imdb8.p.rapidapi.com/auto-complete?q=".concat(e),{method:"GET",headers:{"x-rapidapi-key":"2ecc6a18f1msh149a8c93469a116p1ff3e3jsn92ea038f0326","x-rapidapi-host":"imdb8.p.rapidapi.com"}}).then((function(e){return e.json()})).then((function(e){console.log(e),j(e.d),p(!1)}));var e},children:["Search",Object(x.jsx)(w.a,{})]})]}),Object(x.jsxs)("div",{className:"films-wrapper row centered",children:[u&&Object(x.jsx)("h1",{children:"Loading..."}),h.map((function(e,n){return Object(x.jsx)(g,{film:e,addToWatchList:t,removeFromWatchList:s},n)}))]})]})},y=function(){var e=Object(d.f)().token,t=Object(n.useState)(),s=Object(o.a)(t,2),a=s[0],c=s[1];return Object(n.useEffect)((function(){fetch("https://imdb8.p.rapidapi.com/title/get-details?tconst=".concat(e),{method:"GET",headers:{"x-rapidapi-key":"2ecc6a18f1msh149a8c93469a116p1ff3e3jsn92ea038f0326","x-rapidapi-host":"imdb8.p.rapidapi.com"}}).then((function(e){return e.json()})).then((function(e){c(e),console.log(e)}))}),[]),Object(x.jsxs)("div",{className:"film-info column centered",children:[Object(x.jsx)("div",{className:"decor"}),a?Object(x.jsxs)("div",{className:"row",children:[Object(x.jsx)("img",{src:a.image.url,alt:a.title}),Object(x.jsxs)("div",{className:"column",children:[Object(x.jsx)("h1",{children:a.title}),Object(x.jsxs)("h3",{children:["Genre: ",a.titleType]}),Object(x.jsxs)("span",{children:["Duration : ",a.runningTimeInMinutes," mins"]}),Object(x.jsxs)("span",{children:["Episodes : ",a.numberOfEpisodes]}),Object(x.jsxs)("span",{children:["Years: ",a.seriesStartYear," - ",a.seriesEndYear]}),a.nextEpisode&&Object(x.jsx)(l.b,{to:"/filmInfo/:".concat(a.nextEpisode.split("/")[2]),children:Object(x.jsx)("span",{className:"link",children:"Next episode"})})]})]}):Object(x.jsx)("h1",{children:"Loading..."})]})},L=function(e){var t=e.addToWatchList,s=e.removeFromWatchList,a=Object(n.useState)(localStorage.getItem("watchList")?JSON.parse(localStorage.getItem("watchList")):[]),c=Object(o.a)(a,2),i=c[0],r=c[1],d=Object(n.useState)(),h=Object(o.a)(d,2),j=h[0],b=h[1],m=function(e){r(i.filter((function(t){return t.id!==e.id})))};return Object(x.jsxs)("div",{className:"watchList column centered",children:[Object(x.jsx)("h1",{children:"Watch List"}),Object(x.jsx)("div",{className:"row films-wrapper",children:i.length<1?Object(x.jsx)("h1",{children:"Nothing is here yet"}):i.map((function(e,n){return Object(x.jsx)(g,{film:e,addToWatchList:t,removeFromWatchList:s,clearList:m},n)}))}),i.length>1&&Object(x.jsxs)("div",{className:"column centered rand-film-wrapper",children:[Object(x.jsx)("h4",{children:"Random film to watch"}),Object(x.jsx)("button",{onClick:function(){return b(i[Math.floor(Math.random()*(i.length-1))])},children:"Select"}),j&&Object(x.jsxs)("div",{className:"row",children:[Object(x.jsx)("img",{src:j.i.imageUrl,alt:j.title}),Object(x.jsxs)("div",{className:"column",children:[Object(x.jsx)("h3",{children:j.l}),Object(x.jsxs)("span",{children:["Acrors: ",j.s]}),Object(x.jsxs)("span",{children:["Year: ",j.y]}),Object(x.jsxs)("span",{children:["Raiting: ",j.rank]}),Object(x.jsx)(l.b,{to:"/filmInfo/".concat(j.id),children:Object(x.jsx)("span",{className:"link",children:"More"})})]})]})]})]})},k=(s(45),function(){var e=Object(n.useState)(localStorage.getItem("watchList")?JSON.parse(localStorage.getItem("watchList")):[]),t=Object(o.a)(e,2),s=t[0],a=t[1];Object(n.useEffect)((function(){localStorage.setItem("watchList",JSON.stringify(s))}),[s]);var c=function(e){a([].concat(Object(r.a)(s),[e]))},i=function(e){var t=s.filter((function(t){return t.id!==e.id}));a(t)};return Object(x.jsx)(l.a,{children:Object(x.jsxs)("div",{className:"app ",children:[Object(x.jsxs)("header",{className:"row centered",children:[Object(x.jsx)(l.b,{to:"/",children:Object(x.jsx)("span",{className:"link",children:"Main"})}),Object(x.jsx)(l.b,{to:"/films",children:Object(x.jsx)("span",{className:"link",children:"Films"})}),Object(x.jsx)(l.b,{to:"/watchList",children:Object(x.jsx)("span",{className:"link",children:"Watch List"})})]}),Object(x.jsx)("div",{className:"decor"}),Object(x.jsxs)(d.c,{children:[Object(x.jsx)(d.a,{exact:!0,path:"/",children:Object(x.jsxs)("div",{className:"column centered text-wrapper",children:[Object(x.jsx)("h1",{children:"Imdb API"}),Object(x.jsx)("img",{src:"https://upload.wikimedia.org/wikipedia/commons/thumb/6/69/IMDB_Logo_2016.svg/238px-IMDB_Logo_2016.svg.png",alt:""}),Object(x.jsx)("p",{children:"IMDb is the world's most popular and authoritative source for movie, TV and celebrity content. Find ratings and reviews for the newest movie and TV shows."}),Object(x.jsx)("p",{children:"The movie and talent pages of IMDb are accessible to all internet users, but a registration process is necessary to contribute information to the site. Most data in the database is provided by volunteer contributors. The site enables registered users to submit new material and edits to existing entries. Users with a proven track record of submitting data are given instant approval for additions or corrections to cast, credits, and other demographics of media product and personalities. However, image, name, character name, plot summaries, and title changes are supposedly screened before publication, and usually take between 24 and 72 hours to appear. All registered users can choose their own site name, and most operate anonymously. They have a profile page which shows how long a registered user has been a member, as well as personal movie ratings (should the user decide to display them) and, since 2015, \"badges\" are added representing how many contributions a particular registered user has submitted. These badges range from total contributions made to independent categories such as photos, trivia, bios, etc. If a registered user or visitor is in the entertainment industry and has an IMDb page, then that user/visitor can add photos to that page by enrolling in IMDbPRO. There is no single index of contributors, no index on each profile page of the items contributed, and (except for plot synopses and biographies) no identification of contributors to each product's or person's data pages. Users are also invited to rate any film or TV series on a scale of 1 to 10, and the totals are converted into a weighted mean-rating that is displayed beside each title, with online filters employed to deter ballot-stuffing. In January 2019, IMDb launched a free movie streaming platform called Freedive, an ad-supported service offering Hollywood movie titles and TV shows. Many Freedive titles are licensed from Sony Pictures. Subsequently, in June 2019, Freedive was rebranded as IMDbTV, during the launch of which, the amount of content contained on the platform was tripled."})]})}),Object(x.jsx)(d.a,{path:"/films",children:Object(x.jsx)(N,{addToWatchList:c,removeFromWatchList:i})}),Object(x.jsx)(d.a,{path:"/filmInfo/:token",children:Object(x.jsx)(y,{})}),Object(x.jsx)(d.a,{path:"/watchList",children:Object(x.jsx)(L,{addToWatchList:c,removeFromWatchList:i})})]})]})})}),S=function(e){e&&e instanceof Function&&s.e(3).then(s.bind(null,59)).then((function(t){var s=t.getCLS,n=t.getFID,a=t.getFCP,c=t.getLCP,i=t.getTTFB;s(e),n(e),a(e),c(e),i(e)}))};i.a.render(Object(x.jsx)(a.a.StrictMode,{children:Object(x.jsx)(k,{})}),document.getElementById("root")),S()}},[[47,1,2]]]);
//# sourceMappingURL=main.87478118.chunk.js.map